name: Release

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    branches: [ "master" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  release:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
      EXCLUDE_TEST_TAG: moe.brianhsu.AudioOutputTest
    container:
      image: openjdk:11
    steps:
      - uses: actions/checkout@v3

      - name: Prepare Building Environment
        uses: ./.github/actions/prepare-building-env

      - name: Run Unit test
        uses: ./.github/actions/run-unit-test

      - name: Archive Test Results
        if: always()
        uses: ./.github/actions/archive-test-result
     
      - name: Set Coverage rate for badges
        id: CoverageExport
        run: |
          echo "::set-output name=COVERAGE_RATE::$(xmllint --xpath "string(/scoverage/@branch-rate)" target/scala-2.13/scoverage-report/scoverage.xml)"

      - name: Setup Git Information
        run: |
          git config --global user.email "brianhsu.hsu+githu@gmail.com"
          git config --global user.name "GitHub Action"

      - name: Release
        run: |
          ./distclean
          sbt "release with-defaults"

      - name: Export Version
        id: VersionExport
        run: |
          echo "::set-output name=CURRENT_VERSION::$(git tag | tail -n1)"

      - name: Prepare mvn repository
        run: |
          git clone https://github.com/brianhsu/mavenRepository.git mavenToUpload
          cp -rvf mavenRepository/* mavenToUpload

      - name: Push to maven repository
        id: push_directory
        uses: cpina/github-action-push-to-another-repository@ssh-deploy-key
        env:
          SSH_DEPLOY_KEY: ${{ secrets.SSH_DEPLOY_KEY }}
        with:
          source-directory: mavenToUpload
          destination-github-username: 'brianhsu'
          destination-repository-name: 'mavenRepository'
          user-email: brianhsu.hsu@gmail.com
          commit-message: See ORIGIN_COMMIT from $GITHUB_REF
          target-branch: master

      - name: Update Coverage / Version badges
        run: |
          ./doc/images/generateCoverageBadage.sh ${{ steps.CoverageExport.outputs.COVERAGE_RATE }}
          ./doc/images/generateVersionBadage.sh

      - uses: EndBug/add-and-commit@v9
        with:
          add: 'doc/images/'
          message: Update badages for ${{ steps.VersionExport.outputs.CURRENT_VERSION }}

      - name: Assembly JAR
        run: |
          ./distclean
          sbt clean assembly

      - name: Package runnable JAR files
        run: |
          ./scripts/packageBundles.sh


      - name: Upload Swing Version
        uses: actions/upload-artifact@v1
        with:
          name: Live2DForScala-Swing
          path: Live2DForScala-Swing-${{ steps.VersionExport.outputs.CURRENT_VERSION }}.zip

      - name: Upload SWT Linux Version
        uses: actions/upload-artifact@v1
        with:
          name: Live2DForScala-SWT-Linux
          path: Live2DForScala-SWT-Linux-${{ steps.VersionExport.outputs.CURRENT_VERSION }}.tar.gz

      - name: Upload SWT Windows Version
        uses: actions/upload-artifact@v1
        with:
          name: Live2DForScala-SWT-Windows
          path: Live2DForScala-SWT-Windows-${{ steps.VersionExport.outputs.CURRENT_VERSION }}.zip

      - name: Push release change to original GitHub repository
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}


